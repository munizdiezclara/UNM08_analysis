#c_mem_test_interaction <- emmeans(ANOVA_c_mem_test, ~ predictiveness|condition)
#pairs(c_mem_test_interaction, adjust = "bon")
#c_mem_test_interaction2 <- emmeans(ANOVA_c_mem_test, ~ condition|predictiveness)
#pairs(c_mem_test_interaction2, adjust = "bon")
#condition analysis
c_mem_test_condition<- emmeans(ANOVA_c_mem_test, ~ condition)
pairs(c_mem_test_condition, adjust = "bon")
Mc_mem_test <- filter(test, acc == 1) %>%
group_by(cue_type, condition) %>%
summarise(mean_c_mem = mean(c_mem_score, na.rm = TRUE),
sd_c_mem = sd(c_mem_score, na.rm = TRUE)/sqrt(length(c_mem_score)))
ggplot(Mc_mem_test) +
geom_col(mapping = aes(x = cue_type, y = mean_c_mem, fill = condition)) +
geom_errorbar(aes(x= cue_type, y = mean_c_mem, ymin = mean_c_mem-sd_c_mem, ymax = mean_c_mem+sd_c_mem), color = "black", width=.1,position=position_dodge(0.05)) +
scale_x_discrete(name = "Type of cue") +
scale_y_continuous(name="Corrected memory score") +
labs(title = "Mean corrected memory score in the test phase")
#ANOVA
c_mem_test <- filter(test, acc == 1) %>%
group_by (pNum, condition, predictiveness) %>%
summarise(mean_c_mem = mean(c_mem_score, na.rm = TRUE))
c_mem_test$pNum <- factor(c_mem_test$pNum)
c_mem_test$condition <- factor(c_mem_test$condition)
c_mem_test$predictiveness <- factor(c_mem_test$predictiveness)
ANOVA_c_mem_test <- aov_car(formula = mean_c_mem ~ condition + Error(pNum/predictiveness), data = c_mem_test)
print(ANOVA_c_mem_test)
bay_ANOVA_c_mem_test <- anovaBF(formula = mean_c_mem ~ condition + predictiveness + pNum,
data = data.frame(c_mem_test),
whichRandom = "pNum")
print(bay_ANOVA_c_mem_test)
bay_ANOVA_c_mem_test_int <- bay_ANOVA_c_mem_test[4]/bay_ANOVA_c_mem_test[3]
print(bay_ANOVA_c_mem_test_int)
TukeyHSD(acc_test, which = "condition")
TukeyHSD(ANOVA_acc_test, which = "condition")
?pairs
one.way <- acc_test %>%
group_by(condition) %>%
anova_test(dv = mean_acc, wid = predictiveness, between = condition) %>%
get_anova_table() %>%
adjust_pvalue(method = "bonferroni")
test_2g <- filter(test, condition == "Certain" | condition == "Uncertain")
MA_test_2g <- test_2g %>%
group_by(cue_type, condition) %>%
summarise(mean_acc = mean(acc, na.rm = TRUE),
sd_acc = sd(acc, na.rm = TRUE)/sqrt(length(acc)))
ggplot(MA_test_2g) +
geom_col(mapping = aes(x = cue_type, y = mean_acc, fill = condition)) +
geom_errorbar(aes(x= cue_type, y = mean_acc, ymin = mean_acc-sd_acc, ymax = mean_acc+sd_acc), color = "black", width=.1,position=position_dodge(0.05)) +
scale_x_discrete(name = "Type of cue") +
scale_y_continuous(name="Accuracy") +
labs(title = "Mean accuracy in the test phase")
#ANOVA
acc_test_2g <- test_2g %>%
group_by (pNum, condition, predictiveness) %>%
summarise(mean_acc = mean(acc, na.rm = TRUE))
acc_test_2g$pNum <- factor(acc_test_2g$pNum)
acc_test_2g$condition <- factor(acc_test_2g$condition)
acc_test_2g$predictiveness <- factor(acc_test_2g$predictiveness)
ANOVA_acc_test_2g <- aov_car(formula = mean_acc ~ condition + Error(pNum/predictiveness), data = acc_test_2g)
print(ANOVA_acc_test_2g)
bay_ANOVA_acc_test_2g <- anovaBF(formula = mean_acc ~ condition + predictiveness + pNum,
data = data.frame(acc_test_2g),
whichRandom = "pNum")
print(bay_ANOVA_acc_test_2g)
bay_ANOVA_acc_test_2g_int <- bay_ANOVA_acc_test_2g[4]/bay_ANOVA_acc_test_2g[3]
print(bay_ANOVA_acc_test_2g_int)
#ANOVA
acc_test_2g <- test_2g %>%
group_by (pNum, condition, predictiveness) %>%
summarise(mean_acc = mean(acc, na.rm = TRUE))
acc_test_2g$pNum <- factor(acc_test_2g$pNum)
acc_test_2g$condition <- factor(acc_test_2g$condition)
acc_test_2g$predictiveness <- factor(acc_test_2g$predictiveness)
ANOVA_acc_test_2g <- aov_car(formula = mean_acc ~ condition + Error(pNum/predictiveness), data = acc_test_2g)
print(ANOVA_acc_test_2g)
bay_ANOVA_acc_test_2g <- anovaBF(formula = mean_acc ~ condition + predictiveness + pNum,
data = data.frame(acc_test_2g),
whichRandom = "pNum")
print(bay_ANOVA_acc_test_2g)
bay_ANOVA_acc_test_2g_int <- bay_ANOVA_acc_test_2g[4]/bay_ANOVA_acc_test_2g[3]
print(bay_ANOVA_acc_test_2g_int)
MM_test_2g <- test_2g %>%
group_by(cue_type, condition) %>%
summarise(mean_mem = mean(mem_score, na.rm = TRUE),
sd_mem = sd(mem_score, na.rm = TRUE)/sqrt(length(mem_score)))
ggplot(MM_test_2g) +
geom_col(mapping = aes(x = cue_type, y = mean_mem, fill = condition)) +
geom_errorbar(aes(x= cue_type, y = mean_mem, ymin = mean_mem-sd_mem, ymax = mean_mem+sd_mem), color = "black", width=.1,position=position_dodge(0.05)) +
scale_x_discrete(name = "Type of cue") +
scale_y_continuous(name="Memory score") +
labs(title = "Mean memory score in the test phase")
#ANOVA
mem_test_2g <- test_2g %>%
group_by (pNum, condition, predictiveness) %>%
summarise(mean_mem = mean(mem_score, na.rm = TRUE))
mem_test_2g$pNum <- factor(mem_test_2g$pNum)
mem_test_2g$condition <- factor(mem_test_2g$condition)
mem_test_2g$predictiveness <- factor(mem_test_2g$predictiveness)
ANOVA_mem_test_2g <- aov_car(formula = mean_mem ~ condition + Error(pNum/predictiveness), data = mem_test_2g)
print(ANOVA_mem_test_2g)
bay_ANOVA_mem_test_2g <- anovaBF(formula = mean_mem ~ condition + predictiveness + pNum,
data = data.frame(mem_test_2g),
whichRandom = "pNum")
print(bay_ANOVA_mem_test_2g)
bay_ANOVA_mem_test_2g_int <- bay_ANOVA_mem_test_2g[4]/bay_ANOVA_mem_test_2g[3]
print(bay_ANOVA_mem_test_2g_int)
Mc_mem_test_2g <- test_2g %>%
group_by(cue_type, condition) %>%
summarise(mean_c_mem = mean(c_mem_score, na.rm = TRUE),
sd_c_mem = sd(c_mem_score, na.rm = TRUE)/sqrt(length(c_mem_score)))
ggplot(Mc_mem_test_2g) +
geom_col(mapping = aes(x = cue_type, y = mean_c_mem, fill = condition)) +
geom_errorbar(aes(x= cue_type, y = mean_c_mem, ymin = mean_c_mem-sd_c_mem, ymax = mean_c_mem+sd_c_mem), color = "black", width=.1,position=position_dodge(0.05)) +
scale_x_discrete(name = "Type of cue") +
scale_y_continuous(name="Corrected memory score") +
labs(title = "Mean corrected memory score in the test phase")
#ANOVA
c_mem_test_2g <- test_2g %>%
group_by (pNum, condition, predictiveness) %>%
summarise(mean_c_mem = mean(c_mem_score, na.rm = TRUE))
c_mem_test_2g$pNum <- factor(c_mem_test_2g$pNum)
c_mem_test_2g$condition <- factor(c_mem_test_2g$condition)
c_mem_test_2g$predictiveness <- factor(c_mem_test_2g$predictiveness)
ANOVA_c_mem_test_2g <- aov_car(formula = mean_c_mem ~ condition + Error(pNum/predictiveness), data = c_mem_test_2g)
print(ANOVA_c_mem_test_2g)
bay_ANOVA_c_mem_test_2g <- anovaBF(formula = mean_c_mem ~ condition + predictiveness + pNum,
data = data.frame(c_mem_test_2g),
whichRandom = "pNum")
print(bay_ANOVA_c_mem_test_2g)
bay_ANOVA_c_mem_test_2g_int <- bay_ANOVA_c_mem_test_2g[4]/bay_ANOVA_c_mem_test_2g[3]
print(bay_ANOVA_c_mem_test_2g_int)
c_mem_test_interaction <- emmeans(ANOVA_c_mem_test, ~ predictiveness|condition)
pairs(c_mem_test_interaction, adjust = "bon")
# Pairwise comparisons between group levels
#interaction analysis
c_mem_test_2g_interaction <- emmeans(ANOVA_c_mem_test_2g, ~ predictiveness|condition)
pairs(c_mem_test_2g_interaction, adjust = "bon")
#c_mem_test_interaction2 <- emmeans(ANOVA_c_mem_test, ~ condition|predictiveness)
#pairs(c_mem_test_interaction2, adjust = "bon")
#condition analysis
#c_mem_test_condition<- emmeans(ANOVA_c_mem_test, ~ condition)
#pairs(c_mem_test_condition, adjust = "bon")
# Pairwise comparisons between group levels
#interaction analysis
c_mem_test_2g_interaction <- emmeans(ANOVA_c_mem_test_2g, ~ predictiveness|condition)
pairs(c_mem_test_2g_interaction, adjust = "bon")
c_mem_test_2g_interaction2 <- emmeans(ANOVA_c_mem_test_2g, ~ condition|predictiveness)
pairs(c_mem_test_2g_interaction2, adjust = "bon")
#condition analysis
#c_mem_test_condition<- emmeans(ANOVA_c_mem_test, ~ condition)
#pairs(c_mem_test_condition, adjust = "bon")
Mc_mem_test_2g <- filter(test_2g, acc == 1) %>%
group_by(cue_type, condition) %>%
summarise(mean_c_mem = mean(c_mem_score, na.rm = TRUE),
sd_c_mem = sd(c_mem_score, na.rm = TRUE)/sqrt(length(c_mem_score)))
ggplot(Mc_mem_test_2g) +
geom_col(mapping = aes(x = cue_type, y = mean_c_mem, fill = condition)) +
geom_errorbar(aes(x= cue_type, y = mean_c_mem, ymin = mean_c_mem-sd_c_mem, ymax = mean_c_mem+sd_c_mem), color = "black", width=.1,position=position_dodge(0.05)) +
scale_x_discrete(name = "Type of cue") +
scale_y_continuous(name="Corrected memory score") +
labs(title = "Mean corrected memory score in the test phase")
#ANOVA
c_mem_test_2g <- filter(test_2g, acc == 1) %>%
group_by (pNum, condition, predictiveness) %>%
summarise(mean_c_mem = mean(c_mem_score, na.rm = TRUE))
c_mem_test_2g$pNum <- factor(c_mem_test_2g$pNum)
c_mem_test_2g$condition <- factor(c_mem_test_2g$condition)
c_mem_test_2g$predictiveness <- factor(c_mem_test_2g$predictiveness)
ANOVA_c_mem_test_2g <- aov_car(formula = mean_c_mem ~ condition + Error(pNum/predictiveness), data = c_mem_test_2g)
print(ANOVA_c_mem_test_2g)
bay_ANOVA_c_mem_test_2g <- anovaBF(formula = mean_c_mem ~ condition + predictiveness + pNum,
data = data.frame(c_mem_test_2g),
whichRandom = "pNum")
print(bay_ANOVA_c_mem_test_2g)
bay_ANOVA_c_mem_test_2g_int <- bay_ANOVA_c_mem_test_2g[4]/bay_ANOVA_c_mem_test_2g[3]
print(bay_ANOVA_c_mem_test_2g_int)
# Pairwise comparisons between group levels
#interaction analysis
c_mem_test_2g_interaction <- emmeans(ANOVA_c_mem_test_2g, ~ predictiveness|condition)
pairs(c_mem_test_2g_interaction, adjust = "bon")
c_mem_test_2g_interaction2 <- emmeans(ANOVA_c_mem_test_2g, ~ condition|predictiveness)
pairs(c_mem_test_2g_interaction2, adjust = "bon")
library("rstatix")
#Create probable response variable, as we are using the uncertain condition
stage1 <- stage1 %>%
mutate(prob_response = case_when((cue1 == 1 | cue1 == 3) & cue_o_mouse.clicked_name == "o1_image" ~ 1,
(cue1 == 1 | cue1 == 3) & cue_o_mouse.clicked_name == "o2_image" ~ 0,
(cue1 == 2 | cue1 == 4) & cue_o_mouse.clicked_name == "o1_image" ~ 0,
(cue1 == 2 | cue1 == 4) & cue_o_mouse.clicked_name == "o2_image" ~ 1))
stage1$condition <- as.factor(satge1$condition)
library("rstatix")
#Create probable response variable, as we are using the uncertain condition
stage1 <- stage1 %>%
mutate(prob_response = case_when((cue1 == 1 | cue1 == 3) & cue_o_mouse.clicked_name == "o1_image" ~ 1,
(cue1 == 1 | cue1 == 3) & cue_o_mouse.clicked_name == "o2_image" ~ 0,
(cue1 == 2 | cue1 == 4) & cue_o_mouse.clicked_name == "o1_image" ~ 0,
(cue1 == 2 | cue1 == 4) & cue_o_mouse.clicked_name == "o2_image" ~ 1))
stage1$condition <- as.factor(stage1$condition)
mean_stage1_block6 <- filter(stage1, block == 6) %>%
group_by(pNum, condition) %>%
summarise(mean_response = mean(prob_response, na.rm = TRUE))
outliers <- mean_stage1_block6 %>%
identify_outliers("mean_response")
View(outliers)
outliers_all <- resp %>%
identify_outliers("mean_response")
View(outliers_all)
library(tidyverse)
library(afex)
library(BayesFactor)
library(apa)
library(emmeans)
library("writexl")
load("C:/Users/munizdie/OneDrive - Lancaster University/Experiments/Recognition Memory/UNM08/UNM08_analysis/UNM08_proc_data.RData")
load("UNM08_proc_data.RData")
library(tidyverse)
library(afex)
library(BayesFactor)
library(apa)
library(emmeans)
library("writexl")
load("UNM08_proc_data.RData")
# function to force scientific formatting of numbers (used for large BFs)
changeSciNot <- function(n) {
output <- format(n, scientific = TRUE, digits = 2) #Transforms the number into scientific notation even if small
output <- sub("e", "x10^", output) #Replace e with 10^
output <- sub("\\+0?", "", output) #Remove + symbol and leading zeros on exponent, if > 1
output <- sub("-0?", "-", output) #Leaves - symbol but removes leading zeros on exponent, if < 1
output <- paste0(output,"^")
# output = strsplit(output, "^", fixed = TRUE)
# output = paste0(output[[1]][1],"^", output[[1]][2], "^")
output
}
# function to extract and report BFs with error %s
report_BF_and_error <- function(BF_in, sci_not = TRUE, hyp = "alt"){
if (hyp == "alt") {
BF_notation = "BF~10~ = "
} else if (hyp == "null") {
BF_notation = "BF~01~ = "
}
if (sci_not == TRUE) {
BF_value = changeSciNot(extractBF(BF_in)$bf) # change to sci notation
} else {
BF_value = round(extractBF(BF_in)$bf,2) # otherwise round
}
paste0(BF_notation,
BF_value,
" &plusmn; ",
round(100*extractBF(BF_in)$error,2),
"%")
}
#Create probable response variable, as we are using the uncertain condition
stage1 <- stage1 %>%
mutate(prob_response = case_when((cue1 == 1 | cue1 == 3) & cue_o_mouse.clicked_name == "o1_image" ~ 1,
(cue1 == 1 | cue1 == 3) & cue_o_mouse.clicked_name == "o2_image" ~ 0,
(cue1 == 2 | cue1 == 4) & cue_o_mouse.clicked_name == "o1_image" ~ 0,
(cue1 == 2 | cue1 == 4) & cue_o_mouse.clicked_name == "o2_image" ~ 1))
stage2 <- stage2 %>%
mutate(prob_response = case_when((cue1 == 1 | cue1 == 3) & cue_o_mouse.clicked_name == "o1_image" ~ 1,
(cue1 == 1 | cue1 == 3) & cue_o_mouse.clicked_name == "o2_image" ~ 0,
(cue1 == 2 | cue1 == 4) & cue_o_mouse.clicked_name == "o1_image" ~ 0,
(cue1 == 2 | cue1 == 4) & cue_o_mouse.clicked_name == "o2_image" ~ 1))
#some exclusion criteria
block6 <- filter(stage1, block == 6) %>%
group_by(pNum, condition) %>%
summarise (mean_response = mean(prob_response, na.rm = TRUE))
low_acc <- filter(block6, mean_response < 0.6)
low_acc <- low_acc$pNum
stage1 <- filter(stage1, !pNum %in% not_passed_pNum & !pNum %in% low_acc)
stage2 <- filter(stage2, !pNum %in% not_passed_pNum & !pNum %in% low_acc)
test <- filter(test, !pNum %in% not_passed_pNum & !pNum %in% low_acc)
N <- unique(stage1$pNum)
View(test)
View(stage1)
test <- test %>%
mutate (congruence = case_when(target = 1 & distractor = 2 ~ "C",
test <- test %>%
mutate (congruence = case_when(target == 1 & distractor == 2 ~ "C",
target == 2 & distractor == 1 ~ "C",
target == 5 & distractor == 6 ~ "C",
target == 6 & distractor == 5 ~ "C"
target == 1 & (distractor == 5 | distractor == 6) ~ "NC",
test <- test %>%
mutate (congruence = case_when(target == 1 & distractor == 2 ~ "C",
target == 2 & distractor == 1 ~ "C",
target == 5 & distractor == 6 ~ "C",
target == 6 & distractor == 5 ~ "C",
target == 1 & (distractor == 5 | distractor == 6) ~ "NC",
target == 2 & (distractor == 5 | distractor == 6) ~ "NC",
target == 5 & (distractor == 1 | distractor == 2) ~ "NC",
target == 6 & (distractor == 1 | distractor == 2) ~ "NC"))
test <- test %>%
mutate (congruence = case_when(target == 1 & distractor == 2 ~ "C",
target == 2 & distractor == 1 ~ "C",
target == 5 & distractor == 6 ~ "C",
target == 6 & distractor == 5 ~ "C",
target == 1 & (distractor == 5 | distractor == 6) ~ "NC",
target == 2 & (distractor == 5 | distractor == 6) ~ "NC",
target == 5 & (distractor == 1 | distractor == 2) ~ "NC",
target == 6 & (distractor == 1 | distractor == 2) ~ "NC"))
test_congruent <- filter(test, congruence == "C")
test_incongruent <- filter(test, congruence == "NC")
MA_test_con <- test_congruent %>%
group_by(cue_type, condition) %>%
summarise(mean_acc = mean(acc, na.rm = TRUE),
sd_acc = sd(acc, na.rm = TRUE)/sqrt(length(acc)))
ggplot(MA_test_con) +
geom_col(mapping = aes(x = cue_type, y = mean_acc, fill = condition)) +
geom_errorbar(aes(x= cue_type, y = mean_acc, ymin = mean_acc-sd_acc, ymax = mean_acc+sd_acc), color = "black", width=.1,position=position_dodge(0.05)) +
scale_x_discrete(name = "Type of cue") +
scale_y_continuous(name="Accuracy") +
labs(title = "Mean accuracy in the test phase")
#ANOVA
acc_test_con <- test_congruent %>%
group_by (pNum, condition, predictiveness) %>%
summarise(mean_acc = mean(acc, na.rm = TRUE))
acc_test_con$pNum <- factor(acc_test_con$pNum)
acc_test_con$condition <- factor(acc_test_con$condition)
acc_test_con$predictiveness <- factor(acc_test_con$predictiveness)
ANOVA_acc_test_con <- aov_car(formula = mean_acc ~ condition + Error(pNum/predictiveness), data = acc_test_con)
print(ANOVA_acc_test_con)
bay_ANOVA_acc_test_con <- anovaBF(formula = mean_acc ~ condition + predictiveness + pNum,
data = data.frame(acc_test_con),
whichRandom = "pNum")
print(bay_ANOVA_acc_test_con)
bay_ANOVA_acc_test_con_int <- bay_ANOVA_acc_test_con[4]/bay_ANOVA_acc_test_con[3]
print(bay_ANOVA_acc_test_con_int)
MM_test_con <- test_congruent %>%
group_by(cue_type, condition) %>%
summarise(mean_mem = mean(mem_score, na.rm = TRUE),
sd_mem = sd(mem_score, na.rm = TRUE)/sqrt(length(mem_score)))
ggplot(MM_test_con) +
geom_col(mapping = aes(x = cue_type, y = mean_mem, fill = condition)) +
geom_errorbar(aes(x= cue_type, y = mean_mem, ymin = mean_mem-sd_mem, ymax = mean_mem+sd_mem), color = "black", width=.1,position=position_dodge(0.05)) +
scale_x_discrete(name = "Type of cue") +
scale_y_continuous(name="Memory score") +
labs(title = "Mean memory score in the test phase")
#ANOVA
mem_test_con <- test_congruent %>%
group_by (pNum, condition, predictiveness) %>%
summarise(mean_mem = mean(mem_score, na.rm = TRUE))
mem_test_con$pNum <- factor(mem_test_con$pNum)
mem_test_con$condition <- factor(mem_test_con$condition)
mem_test_con$predictiveness <- factor(mem_test_con$predictiveness)
ANOVA_mem_test_con <- aov_car(formula = mean_mem ~ condition + Error(pNum/predictiveness), data = mem_test_con)
print(ANOVA_mem_test_con)
bay_ANOVA_mem_test_con <- anovaBF(formula = mean_mem ~ condition + predictiveness + pNum,
data = data.frame(mem_test_con),
whichRandom = "pNum")
print(bay_ANOVA_mem_test_con)
bay_ANOVA_mem_test_con_int <- bay_ANOVA_mem_test_con[4]/bay_ANOVA_mem_test_con[3]
print(bay_ANOVA_mem_test_con_int)
# Pairwise comparisons between group levels
#interaction analysis
#mem_test_interaction <- emmeans(ANOVA_mem_test, ~ predictiveness|condition)
#pairs(mem_test_interaction, adjust = "bon")
#mem_test_interaction2 <- emmeans(ANOVA_mem_test, ~ condition|predictiveness)
#pairs(mem_test_interaction2, adjust = "bon")
#condition ananlysis
mem_test_con_condition <- emmeans(ANOVA_mem_test_con, ~ condition)
pairs(mem_test_con_condition, adjust = "bon")
Mc_mem_test_con <- test_congruent %>%
group_by(cue_type, condition) %>%
summarise(mean_c_mem = mean(c_mem_score, na.rm = TRUE),
sd_c_mem = sd(c_mem_score, na.rm = TRUE)/sqrt(length(c_mem_score)))
ggplot(Mc_mem_test_con) +
geom_col(mapping = aes(x = cue_type, y = mean_c_mem, fill = condition)) +
geom_errorbar(aes(x= cue_type, y = mean_c_mem, ymin = mean_c_mem-sd_c_mem, ymax = mean_c_mem+sd_c_mem), color = "black", width=.1,position=position_dodge(0.05)) +
scale_x_discrete(name = "Type of cue") +
scale_y_continuous(name="Corrected memory score") +
labs(title = "Mean corrected memory score in the test phase")
#ANOVA
c_mem_test_con <- test_congruent %>%
group_by (pNum, condition, predictiveness) %>%
summarise(mean_c_mem = mean(c_mem_score, na.rm = TRUE))
c_mem_test_con$pNum <- factor(c_mem_test_con$pNum)
c_mem_test_con$condition <- factor(c_mem_test_con$condition)
c_mem_test_con$predictiveness <- factor(c_mem_test_con$predictiveness)
ANOVA_c_mem_test_con <- aov_car(formula = mean_c_mem ~ condition + Error(pNum/predictiveness), data = c_mem_test_con)
print(ANOVA_c_mem_test_con)
bay_ANOVA_c_mem_test_con <- anovaBF(formula = mean_c_mem ~ condition + predictiveness + pNum,
data = data.frame(c_mem_test_con),
whichRandom = "pNum")
print(bay_ANOVA_c_mem_test_con)
bay_ANOVA_c_mem_test_con_int <- bay_ANOVA_c_mem_test_con[4]/bay_ANOVA_c_mem_test_con[3]
print(bay_ANOVA_c_mem_test_con_int)
Mc_mem_test_con <- filter(test_congruent, acc == 1) %>%
group_by(cue_type, condition) %>%
summarise(mean_c_mem = mean(c_mem_score, na.rm = TRUE),
sd_c_mem = sd(c_mem_score, na.rm = TRUE)/sqrt(length(c_mem_score)))
ggplot(Mc_mem_test_con) +
geom_col(mapping = aes(x = cue_type, y = mean_c_mem, fill = condition)) +
geom_errorbar(aes(x= cue_type, y = mean_c_mem, ymin = mean_c_mem-sd_c_mem, ymax = mean_c_mem+sd_c_mem), color = "black", width=.1,position=position_dodge(0.05)) +
scale_x_discrete(name = "Type of cue") +
scale_y_continuous(name="Corrected memory score") +
labs(title = "Mean corrected memory score in the test phase")
#ANOVA
c_mem_test_con <- filter(test_congruent, acc == 1) %>%
group_by (pNum, condition, predictiveness) %>%
summarise(mean_c_mem = mean(c_mem_score, na.rm = TRUE))
c_mem_test_con$pNum <- factor(c_mem_test_con$pNum)
c_mem_test_con$condition <- factor(c_mem_test_con$condition)
c_mem_test_con$predictiveness <- factor(c_mem_test_con$predictiveness)
ANOVA_c_mem_test_con <- aov_car(formula = mean_c_mem ~ condition + Error(pNum/predictiveness), data = c_mem_test_con)
print(ANOVA_c_mem_test_con)
bay_ANOVA_c_mem_test_con <- anovaBF(formula = mean_c_mem ~ condition + predictiveness + pNum,
data = data.frame(c_mem_test_con),
whichRandom = "pNum")
print(bay_ANOVA_c_mem_test_con)
bay_ANOVA_c_mem_test_con_int <- bay_ANOVA_c_mem_test_con[4]/bay_ANOVA_c_mem_test_con[3]
print(bay_ANOVA_c_mem_test_con_int)
test_con_2g <- filter(test_congruent, condition == "Certain" | condition == "Uncertain")
MA_test_con_2g <- test_con_2g %>%
group_by(cue_type, condition) %>%
summarise(mean_acc = mean(acc, na.rm = TRUE),
sd_acc = sd(acc, na.rm = TRUE)/sqrt(length(acc)))
ggplot(MA_test_con_2g) +
geom_col(mapping = aes(x = cue_type, y = mean_acc, fill = condition)) +
geom_errorbar(aes(x= cue_type, y = mean_acc, ymin = mean_acc-sd_acc, ymax = mean_acc+sd_acc), color = "black", width=.1,position=position_dodge(0.05)) +
scale_x_discrete(name = "Type of cue") +
scale_y_continuous(name="Accuracy") +
labs(title = "Mean accuracy in the test phase")
#ANOVA
acc_test_con_2g <- test_con_2g %>%
group_by (pNum, condition, predictiveness) %>%
summarise(mean_acc = mean(acc, na.rm = TRUE))
acc_test_con_2g$pNum <- factor(acc_test_con_2g$pNum)
acc_test_con_2g$condition <- factor(acc_test_con_2g$condition)
acc_test_con_2g$predictiveness <- factor(acc_test_con_2g$predictiveness)
ANOVA_acc_test_con_2g <- aov_car(formula = mean_acc ~ condition + Error(pNum/predictiveness), data = acc_test_con_2g)
print(ANOVA_acc_test_con_2g)
bay_ANOVA_acc_test_con_2g <- anovaBF(formula = mean_acc ~ condition + predictiveness + pNum,
data = data.frame(acc_test_con_2g),
whichRandom = "pNum")
print(bay_ANOVA_acc_test_con_2g)
bay_ANOVA_acc_test_con_2g_int <- bay_ANOVA_acc_test_con_2g[4]/bay_ANOVA_acc_test_con_2g[3]
print(bay_ANOVA_acc_test_con_2g_int)
MM_test_con_2g <- test_con_2g %>%
group_by(cue_type, condition) %>%
summarise(mean_mem = mean(mem_score, na.rm = TRUE),
sd_mem = sd(mem_score, na.rm = TRUE)/sqrt(length(mem_score)))
ggplot(MM_test_con_2g) +
geom_col(mapping = aes(x = cue_type, y = mean_mem, fill = condition)) +
geom_errorbar(aes(x= cue_type, y = mean_mem, ymin = mean_mem-sd_mem, ymax = mean_mem+sd_mem), color = "black", width=.1,position=position_dodge(0.05)) +
scale_x_discrete(name = "Type of cue") +
scale_y_continuous(name="Memory score") +
labs(title = "Mean memory score in the test phase")
#ANOVA
mem_test_con_2g <- test_con_2g %>%
group_by (pNum, condition, predictiveness) %>%
summarise(mean_mem = mean(mem_score, na.rm = TRUE))
mem_test_con_2g$pNum <- factor(mem_test_con_2g$pNum)
mem_test_con_2g$condition <- factor(mem_test_con_2g$condition)
mem_test_con_2g$predictiveness <- factor(mem_test_con_2g$predictiveness)
ANOVA_mem_test_con_2g <- aov_car(formula = mean_mem ~ condition + Error(pNum/predictiveness), data = mem_test_con_2g)
print(ANOVA_mem_test_con_2g)
bay_ANOVA_mem_test_con_2g <- anovaBF(formula = mean_mem ~ condition + predictiveness + pNum,
data = data.frame(mem_test_con_2g),
whichRandom = "pNum")
print(bay_ANOVA_mem_test_con_2g)
bay_ANOVA_mem_test_con_2g_int <- bay_ANOVA_mem_test_con_2g[4]/bay_ANOVA_mem_test_con_2g[3]
print(bay_ANOVA_mem_test_con_2g_int)
Mc_mem_test_con_2g <- test_con_2g %>%
group_by(cue_type, condition) %>%
summarise(mean_c_mem = mean(c_mem_score, na.rm = TRUE),
sd_c_mem = sd(c_mem_score, na.rm = TRUE)/sqrt(length(c_mem_score)))
ggplot(Mc_mem_test_con_2g) +
geom_col(mapping = aes(x = cue_type, y = mean_c_mem, fill = condition)) +
geom_errorbar(aes(x= cue_type, y = mean_c_mem, ymin = mean_c_mem-sd_c_mem, ymax = mean_c_mem+sd_c_mem), color = "black", width=.1,position=position_dodge(0.05)) +
scale_x_discrete(name = "Type of cue") +
scale_y_continuous(name="Corrected memory score") +
labs(title = "Mean corrected memory score in the test phase")
#ANOVA
c_mem_test_con_2g <- test_con_2g %>%
group_by (pNum, condition, predictiveness) %>%
summarise(mean_c_mem = mean(c_mem_score, na.rm = TRUE))
c_mem_test_con_2g$pNum <- factor(c_mem_test_con_2g$pNum)
c_mem_test_con_2g$condition <- factor(c_mem_test_con_2g$condition)
c_mem_test_con_2g$predictiveness <- factor(c_mem_test_con_2g$predictiveness)
ANOVA_c_mem_test_con_2g <- aov_car(formula = mean_c_mem ~ condition + Error(pNum/predictiveness), data = c_mem_test_con_2g)
print(ANOVA_c_mem_test_con_2g)
bay_ANOVA_c_mem_test_con_2g <- anovaBF(formula = mean_c_mem ~ condition + predictiveness + pNum,
data = data.frame(c_mem_test_con_2g),
whichRandom = "pNum")
print(bay_ANOVA_c_mem_test_con_2g)
bay_ANOVA_c_mem_test_con_2g_int <- bay_ANOVA_c_mem_test_con_2g[4]/bay_ANOVA_c_mem_test_con_2g[3]
print(bay_ANOVA_c_mem_test_con_2g_int)
Mc_mem_test_con_2g <- filter(test_con_2g, acc == 1) %>%
group_by(cue_type, condition) %>%
summarise(mean_c_mem = mean(c_mem_score, na.rm = TRUE),
sd_c_mem = sd(c_mem_score, na.rm = TRUE)/sqrt(length(c_mem_score)))
ggplot(Mc_mem_test_con_2g) +
geom_col(mapping = aes(x = cue_type, y = mean_c_mem, fill = condition)) +
geom_errorbar(aes(x= cue_type, y = mean_c_mem, ymin = mean_c_mem-sd_c_mem, ymax = mean_c_mem+sd_c_mem), color = "black", width=.1,position=position_dodge(0.05)) +
scale_x_discrete(name = "Type of cue") +
scale_y_continuous(name="Corrected memory score") +
labs(title = "Mean corrected memory score in the test phase")
#ANOVA
c_mem_test_con_2g <- filter(test_con_2g, acc == 1) %>%
group_by (pNum, condition, predictiveness) %>%
summarise(mean_c_mem = mean(c_mem_score, na.rm = TRUE))
c_mem_test_con_2g$pNum <- factor(c_mem_test_con_2g$pNum)
c_mem_test_con_2g$condition <- factor(c_mem_test_con_2g$condition)
c_mem_test_con_2g$predictiveness <- factor(c_mem_test_con_2g$predictiveness)
ANOVA_c_mem_test_con_2g <- aov_car(formula = mean_c_mem ~ condition + Error(pNum/predictiveness), data = c_mem_test_con_2g)
print(ANOVA_c_mem_test_con_2g)
bay_ANOVA_c_mem_test_con_2g <- anovaBF(formula = mean_c_mem ~ condition + predictiveness + pNum,
data = data.frame(c_mem_test_con_2g),
whichRandom = "pNum")
print(bay_ANOVA_c_mem_test_con_2g)
bay_ANOVA_c_mem_test_con_2g_int <- bay_ANOVA_c_mem_test_con_2g[4]/bay_ANOVA_c_mem_test_con_2g[3]
print(bay_ANOVA_c_mem_test_con_2g_int)
